services:
  web:
    image: nginx:1.17
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./.docker/nginx/main.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/nginx/cert.pem:/etc/cert.pem
      - ./.docker/nginx/key.pem:/etc/key.pem
    depends_on:
      - php

  php:
    build:
      context: ./
      dockerfile: .docker/php/Dockerfile
    volumes:
      - ./:/var/www/html
      - ./.docker/php:/usr/local/etc/php/custom.d
    environment:
      PHP_INI_SCAN_DIR: "/usr/local/etc/php/custom.d:/usr/local/etc/php/conf.d"

  db:
    image: postgres:latest
    restart: always
    ports:
      - "54322:5432"
    volumes:
      - "./database/postgres-data:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: calinv_db

  cron:
    build:
      context: ./
      dockerfile: .docker/cron/Dockerfile
    volumes:
      - ./:/var/www/html
      - ./.docker/php:/usr/local/etc/php/custom.d
    environment:
      PHP_INI_SCAN_DIR: "/usr/local/etc/php/custom.d:/usr/local/etc/php/conf.d"

  certbot:
    ports:
      - "6000:80"
    env_file:
      - .env
    # и снова монтируем директорию nginx
    volumes:
      - ./.docker/nginx/:/etc/nginx/
    build:
      context: ./certbot
      dockerfile: Dockerfile
      # задаем переменные среды
      args:
        DOMAIN_EMAIL: ${DOMAIN_EMAIL}
        DOMAIN_URL: ${DOMAIN_URL}
